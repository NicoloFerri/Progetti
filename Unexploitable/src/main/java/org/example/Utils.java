package org.example;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Arrays;
import java.util.Collections;
import java.util.Objects;
import java.util.Random;

public class Utils {
    private static final Logger LOG = LoggerFactory.getLogger(Utils.class);


    private static String[] deck = {
            "As", "Ah", "Ad", "Ac",
            "2s", "2h", "2d", "2c",
            "3s", "3h", "3d", "3c",
            "4s", "4h", "4d", "4c",
            "5s", "5h", "5d", "5c",
            "6s", "6h", "6d", "6c",
            "7s", "7h", "7d", "7c",
            "8s", "8h", "8d", "8c",
            "9s", "9h", "9d", "9c",
            "Ts", "Th", "Td", "Tc",
            "Js", "Jh", "Jd", "Jc",
            "Qs", "Qh", "Qd", "Qc",
            "Ks", "Kh", "Kd", "Kc"
    };




    public static void generateFlop(String hand){
        Random r = new Random();
        String[] flop = new String[3];
        flop[0]=deck[r.nextInt(deck.length)];
        boolean doLoop = true;

        while( Objects.equals(flop[0], flop[1]) || checkCardInHand(hand,flop[1]) || doLoop){
            flop[1]=deck[r.nextInt(deck.length)];
            doLoop=false;
        }

        doLoop=true;
        while(Objects.equals(flop[0], flop[2]) || Objects.equals(flop[1], flop[2]) || checkCardInHand(hand,flop[2]) || doLoop){
            flop[2]=deck[r.nextInt(deck.length)];
            doLoop=false;
        }

        LOG.info("Hero hand : {} {} ", hand.substring(0,2),hand.substring(2,4));
        LOG.info("generato flop : {} {} {}",flop[0],flop[1],flop[2]);
    }



    public static boolean checkCardInHand(String hand , String card){
        String firsthandCard = hand.substring(0,2);
        String secondHandCard = hand.substring(2,4);
        return (Objects.equals(firsthandCard, card) || Objects.equals(secondHandCard, card));
    }


    public static String[] sortBoard (String[] board){
        String[] sortedBoard  = new String[5];
        Integer[] arrayofInt = new Integer[board.length];

        for(int i=0 ; i<4 ; i++){
            arrayofInt[i]=returnNumber(board[i].substring(0,2));
        }


        Arrays.sort(arrayofInt, Collections.reverseOrder());



        return sortedBoard;
    }


    





        public static Integer returnNumber(String s) {
            String compare = s.substring(0,1);
            switch (compare) {
                case "A":
                    return 14;
                case "2":
                    return 2;
                case "3":
                    return 3;
                case "4":
                    return 4;
                case "5":
                    return 5;
                case "6":
                    return 6;
                case "7":
                    return 7;
                case "8":
                    return 8;
                case "9":
                    return 9;
                case "T":
                    return 10;
                case "J":
                    return 11;
                case "Q":
                    return 12;
                case "K":
                    return 13;
                default:
                    return null;
            }
        }


    }








