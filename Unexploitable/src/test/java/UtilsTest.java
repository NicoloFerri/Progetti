import lombok.extern.slf4j.Slf4j;
import org.example.Utils;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;

@Slf4j
public class UtilsTest {

    @InjectMocks
    private Utils utils;



    @Test
    public void generateFlopTest(){
        Utils.generateFlop("AsAh");
    }

    @Test
    public void sortBoardTest(){
        String[] board = {"As","4d","7s","Ac","Kh","Ad","4c"};
        Utils.sortBoard(board);
    }

    @Test
    public void isFullHouseTest(){
        String[] flop = {"As", "3d", "3s"};
        String[] hand = {"Ah","Ad"};
        Utils.isFullHouse(flop,hand);
    }

    @Test
    public void boardIsOnlyPairedTest(){
        String[] board = {"As","3d","4s","7d"};
        Utils.boardIsOnlyPaired(board);
    }

    @Test
    public void boardIsOnlyTripsedTest(){
        String[] board = {"As","3d","4s","3d","3s"};
        Utils.boardIsOnlyTripsed(board);
    }

    @Test
    public void isFullHouseBoardTest(){
        String[] board = {"3s","3d","7c","7s","3h"};
        Utils.isFullHouseBoard(board);
    }

    @Test
    public void fullHouseTest(){
        String[] hand = {"As","7c"};
        String[] board = {"3s","3d","7c","7s","Ah"};
        Utils.isFullHouse(board,hand);
    }

    @Test
    public void cardMakeATripsWithBoardTest(){
        String[] hand = {"As","7c"};
        String[] board = {"3s","Ad","4c","7s","7h"};
        for(String h : hand){
            Utils.cardMakeATripsWithBoard(board,h);
        }
    }

    @Test
    public void getCardsPairedOnBoardTest(){
        String[] board = {"3s","Ad","4c","7s","7h"};
        Utils.getCardsPairedOnBoard(board);
    }

    @Test
    public void getCardsTripsedOnBoardTest(){
        String[] board = {"3s","Ad","7c","7s","7h"};
        Utils.getCardsTripsedOnBoard(board);
    }

    @Test
    public void isFlushTest(){
        String[] hand = {"As","7s"};
        String[] board = {"3s","Ad","7c","6s","5s"};
        Utils.isFlush(board,hand);
    }

    @Test
    public void sortBoardPlusHandTest(){
        String[] hand = {"Ks","As"};
        String[] board = {"3s","Js","7c"};
        Utils.sortBoardPlusHand(board,hand);
    }

    @Test
    public void isStraightTest(){
        String[] hand = {"Ks","As"};
        String[] board = {"3c","2c","4h","5s","Td"};
        Utils.isStraight(board,hand);
    }

    @Test
    public void sortBoardALowTest(){
        String[] board = {"3c","Ac","4h","5s","Td"};
        Utils.sortBoardALow(board);
    }

    @Test
    public void checkSymbolOfSuitnessTest(){
        String[] board = {"3c","Ac","4c","5s","Tc","Kc"};
        Utils.checkSymbolOfSuitness(board);
    }

    @Test
    public void getBoardWithOnlyFlushTest(){
        String[] board = {"3c","Ac","4c","2c","5c","Kh","Tc"};
        Utils.getBoardWithOnlyFlush(board);
    }

    @Test
    public void getBoardWithOnlyFullHouseTest(){
        String[] board = {"3d","Ts","Ac","Kd","Tc","3c","3h"};
        Utils.getBoardWithOnlyFullHouse(board);
    }
}
